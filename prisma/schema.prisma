// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

//MODEL
model User {
  id                    String     @id @default(auto()) @map("_id") @db.ObjectId
  name                  String?
  phone                 Int?
  email                 String?    @unique
  password              String?
  emailVerified         Boolean?
  verifyToken           String?    @unique
  verifyTokenExpired    DateTime?
  forgotPassword        String?
  forgotPasswordExpired DateTime?
  rating                Int?
  followers             String[]
  followings            String[]
  image                 String?
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
  accounts              Account[]
  sessions              Session[]
  items                 ItemList[]
  reviews               Reviews[]
}

model Account {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  userId             String    @db.ObjectId
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationRequest {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model GamesCatalog {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String     @unique
  descroption String?
  image       String?
  createdAt   DateTime   @default(now())
  items       ItemList[]
}

model ItemList {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  userId         String?       @db.ObjectId
  gamesCatalogId String?       @db.ObjectId
  title          String
  description    String?
  rating         Int?
  image          String[]
  createdAt      DateTime      @default(now())
  user           User?         @relation(fields: [userId], references: [id])
  GamesCatalog   GamesCatalog? @relation(fields: [gamesCatalogId], references: [id])
}

model Reviews {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  descriptions String?
  userId       String?  @db.ObjectId
  createdAt    DateTime @default(now())
  User         User?    @relation(fields: [userId], references: [id])
}
